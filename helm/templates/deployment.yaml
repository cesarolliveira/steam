apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm.fullname" . }}
  labels:
    {{- include "helm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "helm.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          volumeMounts:
            - name: {{ .Values.volume.name }}  # Referência ao volume
              mountPath: {{ .Values.volume.mountPath }}  # Caminho onde o volume será montado (dentro do container)
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: "RABBITMQ_HOST"
            value: "{{ .Values.rabbitmq.host }}"
          - name: "RABBITMQ_PORT"
            value: "{{ .Values.rabbitmq.port }}"
          - name: "RABBITMQ_USERNAME"
            value: "{{ .Values.rabbitmq.username }}"
          - name: "RABBITMQ_PASSWORD"
            value: "{{ .Values.rabbitmq.password }}"
          - name: "RABBITMQ_QUEUE"
            value: "{{ .Values.rabbitmq.queue }}"
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: {{ .Values.volume.name }}  # Referência ao volume
          {{- if eq .Values.volume.type "emptyDir" }}
          emptyDir: {}  # Tipo de volume 'emptyDir'
          {{- else if eq .Values.volume.type "hostPath" }}
          hostPath:
            path: {{ .Values.volume.path }}  # Caminho do nó onde o volume é mapeado
            type: Directory  # Tipo do hostPath
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}